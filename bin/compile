#!/usr/bin/env bash
####
#
# Used to perform the transformation steps on the app
#
# Usage:
#
# ```shell
# bin/compile BUILD_DIR CACHE_DIR ENV_DIR
# ```
#
# ToDo:
#   - update for modules
#   - enable python support for addons
#   - possible to configure if no znc.conf found?
#
set -e
set -o pipefail

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

VERSION=1.6.0
RELEASE="znc-$VERSION"

indent() {
    sed -u 's/^/       /'
}

echo "-----> bin/compile"

if [ -f $CACHE_DIR/VERSION ]; then
    CACHED_VERSION="$(cat $CACHE_DIR/VERSION)"
    echo "-----> CACHED_VERSION"
    echo $CACHED_VERSION | indent
fi

if [ ! -d "$BUILD_DIR/src" ] && [ ! -d "$CACHE_DIR/src" ]; then
    cd $BUILD_DIR

    echo "-----> Downloading"
    curl -s "http://znc.in/releases/$RELEASE.tar.gz" > znc.tar.gz
    tar -xzf znc.tar.gz
    mv $RELEASE src
    rm znc.tar.gz

    echo "-----> Configuring"
    cd $BUILD_DIR/src/
    ./autogen.sh 2>&1 1>/dev/null | indent
    ./configure --prefix=$BUILD_DIR --enable-run-from-source | indent

    echo "-----> Compiling"
    make 2>&1 1>/dev/null | indent

    echo "-----> Installing"
    make install 2>&1 1>/dev/null | indent

    cp -R $BUILD_DIR/src $CACHE_DIR/src
    echo -n $VERSION > $CACHE_DIR/VERSION
elif [ "$VERSION" = "$CACHED_VERSION" ]; then
    echo "-----> No change in znc version"
    cp -R $CACHE_DIR/src $BUILD_DIR/src
fi

echo "-----> Setting up app"
mkdir -p $BUILD_DIR/.znc/{configs,modules,moddata,users}

if [ -f $BUILD_DIR/znc.conf ]; then
    mv -v $BUILD_DIR/znc.conf $BUILD_DIR/.znc/configs/znc.conf
fi

if [ -f $BUILD_DIR/znc.pem ]; then
    mv -v $BUILD_DIR/znc.pem $BUILD_DIR/.znc/znc.pem
fi
