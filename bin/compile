#!/usr/bin/env bash
####
#
# Used to perform the transformation steps on the app
#
# Usage:
#
# ```shell
# bin/compile BUILD_DIR CACHE_DIR ENV_DIR
# ```
#
# ToDo:
#   - enable python support for addons
#   - possible to configure if no znc.conf found?
#
set -e
set -o pipefail

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

VERSION=1.6.0
RELEASE="znc-$VERSION"

####
#
# Helper functions
#
indent() {
    c="${1:+"2,999"} s/^/       /"
    case $(uname) in
        Darwin) sed -l "$c";;
        *)      sed -u "$c";;
    esac
}

debug() {
    if [ $DEBUG ]; then
        echo "[DEBUG] $*" | indent
    fi
}

warning() {
    echo "[WARNING] $*" | indent
}

error() {
    echo "[ERROR] $*" | indent
    exit 1
}

section() {
    echo "-----> $*"
}

export_env_dir() {
    env_dir=$1
    whitelist_regex=${2:-''}
    blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
    if [ -d "$env_dir" ]; then
        for e in $(ls $env_dir); do
            echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
                export "$e=$(cat $env_dir/$e)"
            :
        done
    fi
}
#### end helper functions ####

_download_znc() {
    section "Downloading ZNC $VERSION...."
    debug "curl -s http://znc.in/releases/$RELEASE.tar.gz > znc.tar.gz"
    curl -s "http://znc.in/releases/$RELEASE.tar.gz" > znc.tar.gz
    debug "tar -xzf znc.tar.gz"
    tar -xzf znc.tar.gz
    debug "mv $RELEASE znc-src"
    mv $RELEASE znc-src
    debug "rm znc.tar.gz"
    rm znc.tar.gz
    debug "Downloading ZNC Complete"
}

_configure_znc() {
    section "Configuring ZNC...."
    debug "cd $BUILD_DIR/znc-src"
    cd $BUILD_DIR/znc-src
    debug "./autogen.sh"
    ./autogen.sh 2>&1 1>/dev/null | indent
    debug "./configure --enable-run-from-source"
    ./configure --enable-run-from-source 2>&1 1>/dev/null | indent
    debug "Configuring ZNC Complete"
}

_make_znc() {
    section "Compiling ZNC...."
    debug "make"
    make 2>&1 1>/dev/null | indent
    debug "Compiling ZNC Complete"
}

section "Compiling App...."
debug "mkdir -p $CACHE_DIR"
mkdir -p $CACHE_DIR
export_env_dir $ENV_DIR

if [ -f $CACHE_DIR/VERSION ]; then
    CACHED_VERSION="$(cat $CACHE_DIR/VERSION)"
fi

if [ ! -d "$BUILD_DIR/znc-src" ] && [ ! -d "$CACHE_DIR/znc-src" ]; then
    debug "cd $BUILD_DIR"
    cd $BUILD_DIR

    _download_znc
    _configure_znc
    _make_znc

    debug "rm -rf $CACHE_DIR/znc-src $CACHE_DIR/VERSION"
    rm -rf $CACHE_DIR/znc-src $CACHE_DIR/VERSION
    debug "cp -R $BUILD_DIR/znc-src $CACHE_DIR/znc-src"
    cp -R $BUILD_DIR/znc-src $CACHE_DIR/znc-src
    debug "echo -n $VERSION > $CACHE_DIR/VERSION"
    echo -n $VERSION > $CACHE_DIR/VERSION
elif [ "$VERSION" = "$CACHED_VERSION" ]; then
    debug "No change in znc version"
fi

debug "cp -R $CACHE_DIR/znc-src/* $BUILD_DIR/znc-src"
mkdir -p $BUILD_DIR/znc-src
cp -R $CACHE_DIR/znc-src/* $BUILD_DIR/znc-src/

section "Setting up app...."
debug "mkdir -p $BUILD_DIR/.znc/{configs,modules,moddata,users} $BUILD_DIR/bin"
mkdir -p $BUILD_DIR/.znc/{configs,modules,moddata,users} $BUILD_DIR/bin

for file in $BUILD_DIR/znc-src/modules/*; do
    debug "cp $file $BUILD_DIR/.znc/modules/"
    cp -R $file $BUILD_DIR/.znc/modules/
done

if [ -f $BUILD_DIR/znc.pem ]; then
    debug "mv $BUILD_DIR/znc.pem $BUILD_DIR/.znc/znc.pem"
    mv $BUILD_DIR/znc.pem $BUILD_DIR/.znc/znc.pem
fi

if [ -d $BUILD_DIR/configs ]; then
    for file in $BUILD_DIR/configs/*; do
        debug "mv $file $BUILD_DIR/.znc/configs/"
        mv $file $BUILD_DIR/.znc/configs/
    done
fi
if [ -d $BUILD_DIR/modules ]; then
    for file in $BUILD_DIR/modules/*; do
        debug "mv $file $BUILD_DIR/.znc/modules/"
        mv $file $BUILD_DIR/.znc/modules/
    done
fi
if [ -d $BUILD_DIR/moddata ]; then
    for file in $BUILD_DIR/moddata/*; do
        debug "mv $file $BUILD_DIR/.znc/moddata/"
        mv $file $BUILD_DIR/.znc/moddata/
    done
fi
if [ -d $BUILD_DIR/users ]; then
    for file in $BUILD_DIR/users/*; do
        debug "mv $file $BUILD_DIR/.znc/users/"
        mv $file $BUILD_DIR/.znc/users/
    done
fi

cat <<EOF >> $BUILD_DIR/bin/znc
#!/usr/bin/env bash
set -e

for file in \$HOME/.znc/configs/*; do
    sed -i.bak "s/\\\$PORT/\$PORT/g" \$file
done

exec znc-src/znc -f
EOF
chmod +x $BUILD_DIR/bin/znc
